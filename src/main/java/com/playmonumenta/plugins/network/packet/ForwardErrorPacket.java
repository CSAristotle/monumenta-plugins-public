package com.playmonumenta.plugins.network.packet;

import com.playmonumenta.plugins.Constants;
import com.playmonumenta.plugins.Plugin;
import com.playmonumenta.plugins.utils.PacketUtils;

import java.util.UUID;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;

public class ForwardErrorPacket implements Packet {
	public static final String StaticPacketChannel = "Monumenta.Bungee.Error.Forward";

	@Override
	public String getPacketChannel() {
		return StaticPacketChannel;
	}

	@Override
	public String getPacketData() throws Exception {
		throw new Exception("This packet is generated by bungeecord!");
	}

	public static void handlePacket(Plugin plugin, String data) throws Exception {
		String[] rcvStrings = PacketUtils.decodeStrings(data);
		if (rcvStrings == null || rcvStrings.length == 0) {
			throw new Exception("Received string data is null or invalid length");
		}

		String failedChannel = rcvStrings[0];
		if (failedChannel.equals(TransferPlayerDataPacket.StaticPacketChannel)) {
			// Failed to transfer the player to the requested server
			// Notify player and unfreeze their inventory
			String server = rcvStrings[1];
			UUID playerUUID = UUID.fromString(rcvStrings[3]);

			Player player = plugin.getPlayer(playerUUID);
			if (player != null) {
				player.sendMessage(ChatColor.RED + "Bungee reports server '" + server + "' is not available!");

				/* Call this on the main thread */
				// Remove the metadata that prevents player from interacting with things (if present)
				Bukkit.getScheduler().callSyncMethod(plugin,
				                                     () -> {
				                                         player.removeMetadata(Constants.PLAYER_ITEMS_LOCKED_METAKEY, plugin);
				                                         return true; //Does nothing - conforms to functional interface
				                                     }
				);
			}
		}
	}
}
